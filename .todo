☐ Rename get_king_status() to something else. @low

☐ Fix game on smaller screens. @bug
☐ Fix game not showing 'Tie' message when black eats last white piece. @bug
☐ Fix thing where some pieces get added twice to the list of eaten pieces. @bug
☐ Castle move allowed after king move. @bug

Organize stuff: @critical
  ✘ Figure out why I added index_code.py to .gitignore. @cancelled(20-11-11 15:40)
    // No idea
  ✔ Make new file to store only GUI code. @done(20-11-11 15:51)
    // Why didn't I do this in first place?
  ✘ Figure out why move_code.py is in .gitignore. @cancelled(20-11-11 15:40)
    // Also no idea
  ✔ Fix move_code.py to only add that to the resulting html file. @done(20-11-11 15:51)
  ✔ Remove both index_code.py and move_code.py from .gitignore. @done(20-11-11 15:51)
  ✔ Make /utils folder. @done(20-11-11 15:51)

UI:
  ✔ Make a usable board. @done(20-10-04 13:02)
    ✔ Making two boards: one above the other. @done(20-09-14 21:07)
      // The one at the top will handle the pieces.
      // The one at the bottom will have the actual board.
    ✔ Highlight possible moves. @done(20-09-13 18:37)
    ✔ Selectable squares. @done(20-09-25 15:06)
    ✔ Display pieces. @done(20-10-07 15:15)
      ✔ Make animation for piece movement. @done(20-10-01 18:30)
        ✔ Make it smooth. @low @done(20-10-07 15:15)
        ✔ Make an exception for castling. @done(20-10-01 18:29)
      ✔ Make function for moving piece. @done(20-09-24 20:46)
      ✔ Make special case for king movement when castling. @done(20-09-30 21:39)
      ✔ Render_board() function: it's supposed to look trough every square and put the corresponding piece. @done(20-09-24 17:23)
    ✔ Turn pawns into other pieces once they reach the other side of the board. @done(20-10-04 11:55)
      ✔ Block piece selection until promotion is done. @done(20-10-04 11:31)
  ✔ Limit piece selector to be always within view. @started(20-10-07 22:08) @done(20-10-08 12:47) @lasted(14h39m10s)
    // Discovered how to make it horizontal, however, still no idea why it wansn't like that in the fisrt place.
  ✔ Display eaten pieces somewhere. @started(20-10-09 13:26) @done(20-10-09 17:43) @lasted(4h17m44s)
    // On the side
    ✔ Fix spacing with multiple pieces. @done(20-10-09 17:43)
  ☐ Add sound. @low
  ✔ Checkmate/Tie message. @done(20-10-09 20:04)
    ✔ Reset button. @started(20-10-10 14:27) @done(20-10-10 14:45) @lasted(18m59s)
      // The message is the button.
  ☐ Timer. @low
  ☐ Add 'undo move' functionality @high

Retarded Sloth:
  ✔ Make minimax tree evaluator (TEST). @done(20-11-03 11:18)
  ✔ Make board scoring function (TEST). @done(20-11-03 12:18)
    ✔ Add points when eating piece. @done(20-11-03 12:18)
    ✔ Add points when check. @done(20-11-03 12:11)
    ☐ Add points when a piece prevents castling.
    ✘ Add a point for each piece present on the board. @cancelled(20-11-04 21:26)
    ✔ Add each piece's value to the score (more pieces = greater score) @done(20-11-04 21:27)
  ✔ Make moves tree generator. @critical @done(20-11-14 10:46)
    ✔ Keep record of moved rooks. @done(20-11-09 14:13)
      ✔ Not only when castling... @done(20-11-10 00:12)
    ✔ Change flag when king moves. @done(20-11-10 00:54)
    ✔ Change flag when eating a piece. @done(20-11-10 11:27)
    ✔ Add edge-case for promotions. @done(20-11-10 11:27)
    ✔ Optimize the generator. @done(20-11-14 15:39)
    // Not really, but I'll call it a day.
      ✘ Don't evaluate every node, just the last level. @cancelled(20-11-14 15:38)
      // This implementation sucks, and it doesn't allow it.
      // For now I just want a playable chess, I'll later fix it (if I feel like doing so).
      ✔ Break branch when move results in mate or tie. @done(20-11-14 10:48)
      ✔ Check child score before analyzing: skip those with (higher/lower) score. @done(20-11-14 15:38)
      // Is C really much faster than python?
    ✔ Change game-state-values when analyzing particular nodes. @done(20-11-13 01:07)
  ☐ Figure out how to test the tree generator. @critical
  ✔ Integrate with GUI. @done(20-11-14 19:45)


Archive:
  ✔ Fix bishop and rook funcitons preventing castle. @high @done(20-09-29 11:39)
  // Somehow not having both rooks avaliable makes the king unwilling to castle...
  ✔ Fix get_piece_moves on empty square on main branch @done(20-09-14 21:10)
  ✔ Make move_piece() function. @done(20-09-06 11:05)
  ✔ Implement Castle move. @critical @done(20-09-05 21:38)
  ✔ Tests for check mate. @done(20-09-04 06:05)
  ✔ Limit piece movement when in check. @critical @done(20-09-04 06:05)
  ✔ Make can_move(team: PieceTeam) -> bool @done(20-09-03 13:29)
  ✔ Redefine functions to determine rook and bishop attacking squares. @done(20-08-30 18:53) @project(Fix get_every_square_the_king_cant_be_in())
    // Not redefine them, instead modify the existing ones to behave under the show_protected flag
    // Rook, bishop is done.
  ✔ Fix tests. @done(20-08-30 18:53) @project(Fix get_every_square_the_king_cant_be_in())
  ✔ Finish tests for get_every_square_the_king_cant_be_in(). @done(20-08-06 02:02)
  ✔ Update King movement function to consider all the squares he can't be in. @done(20-08-06 02:02)
  ✔ Refactor use of Chess().get_piece() to use verbose variables (instead of piece[0] or piece[1]) @done(20-08-06 12:27)
  ✔ Refactor get_king_status() to set pinned_pieces for both teams, path to checking piece and in_check. @done(20-08-08 02:33)
  ✔ Fix king's movement @done(20-09-25 12:27)
    // Check if there's a rook...
    // Turned out, pieces were duplicating with horizontal movement
  ✔ Figure out how to add classes to divs... @done(20-10-04 01:51)
    // Capitalize
  ✔ Tie variable in engine. @done(20-10-05 15:49)
    // A tie should happen when the only pieces on the board are kings or
       when one player doesn't have avaliable moves.
  ✘ Use IMG instead of directly changing <...>.innerHTML = ... @cancelled(20-10-07 22:06)
    // This doesn't help with performance and requires a change in put_piece_in_square()'s
       super complicated logic (hehe).
  ✔ Add usage notes for the engine. @done(20-10-08 12:47)
  ✔ Fix rooks added to the list of eaten pieces after castle. @bug @started(20-11-11 01:00) @done(20-11-11 01:05) @lasted(5m20s)
