☐ Rename get_king_status() to something else. @low
☐ Add 'undo move' functionality

UI:
    ✔ Make a usable board. @done(20-10-04 13:02)
      ✔ Making two boards: one above the other. @done(20-09-14 21:07)
        // The one at the top will handle the pieces.
        // The one at the bottom will have the actual board.
      ✔ Highlight possible moves. @done(20-09-13 18:37)
      ✔ Selectable squares. @done(20-09-25 15:06)
      ✔ Display pieces. @done(20-10-07 15:15)
        ✔ Make animation for piece movement. @done(20-10-01 18:30)
          ✔ Make it smooth. @low @done(20-10-07 15:15)
          ✔ Make an exception for castling. @done(20-10-01 18:29)
        ✔ Make function for moving piece. @done(20-09-24 20:46)
        ✔ Make special case for king movement when castling. @done(20-09-30 21:39)
        ✔ Render_board() function: it's supposed to look trough every square and put the corresponding piece. @done(20-09-24 17:23)
      ✔ Turn pawns into other pieces once they reach the other side of the board. @done(20-10-04 11:55)
        ✔ Block piece selection until promotion is done. @done(20-10-04 11:31)
    ✔ Limit piece selector to be always within view. @started(20-10-07 22:08) @done(20-10-08 12:47) @lasted(14h39m10s)
      // Discovered how to make it horizontal, however, still no idea why it wansn't like that in the fisrt place.
    ✔ Display eaten pieces somewhere. @started(20-10-09 13:26) @done(20-10-09 17:43) @lasted(4h17m44s)
      // On the side
      ✔ Fix spacing with multiple pieces. @done(20-10-09 17:43)
    ☐ Add sound.
    ☐ Checkmate/Tie message.
    ☐ Timer.


Retarded Sloth:
    ☐ Make retarded sloth.


Archive:
  ✔ Fix bishop and rook funcitons preventing castle. @high @done(20-09-29 11:39)
  // Somehow not having both rooks avaliable makes the king unwilling to castle...
  ✔ Fix get_piece_moves on empty square on main branch @done(20-09-14 21:10)
  ✔ Make move_piece() function. @done(20-09-06 11:05)
  ✔ Implement Castle move. @critical @done(20-09-05 21:38)
  ✔ Tests for check mate. @done(20-09-04 06:05)
  ✔ Limit piece movement when in check. @critical @done(20-09-04 06:05)
  ✔ Make can_move(team: PieceTeam) -> bool @done(20-09-03 13:29)
  ✔ Redefine functions to determine rook and bishop attacking squares. @done(20-08-30 18:53) @project(Fix get_every_square_the_king_cant_be_in())
    // Not redefine them, instead modify the existing ones to behave under the show_protected flag
    // Rook, bishop is done.
  ✔ Fix tests. @done(20-08-30 18:53) @project(Fix get_every_square_the_king_cant_be_in())
  ✔ Finish tests for get_every_square_the_king_cant_be_in(). @done(20-08-06 02:02)
  ✔ Update King movement function to consider all the squares he can't be in. @done(20-08-06 02:02)
  ✔ Refactor use of Chess().get_piece() to use verbose variables (instead of piece[0] or piece[1]) @done(20-08-06 12:27)
  ✔ Refactor get_king_status() to set pinned_pieces for both teams, path to checking piece and in_check. @done(20-08-08 02:33)
  ✔ Fix king's movement @done(20-09-25 12:27)
    // Check if there's a rook...
    // Turned out, pieces were duplicating with horizontal movement
  ✔ Figure out how to add classes to divs... @done(20-10-04 01:51)
    // Capitalize
  ✔ Tie variable in engine. @done(20-10-05 15:49)
    // A tie should happen when the only pieces on the board are kings or
       when one player doesn't have avaliable moves.
  ✘ Use IMG instead of directly changing <...>.innerHTML = ... @cancelled(20-10-07 22:06)
    // This doesn't help with performance and requires a change in put_piece_in_square()'s
       super complicated logic (hehe).
  ✔ Add usage notes for the engine. @done(20-10-08 12:47)